name: Release Build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    name: Release Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: build-release
          key: ${{ runner.os }}-build-release

      - name: Generate Ninja Build Files
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cmake \
            -B build-release \
            -GNinja \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_BUILD_TYPE=Release \
            ./llvm

      - name: Build LLVM
        run: |
          cd build-release
          ninja -j $(nproc --all)
